USE testdb;

CREATE TABLE Groups (
  GroupId INT NOT NULL AUTO_INCREMENT,
  GroupName VARCHAR(200) NOT NULL,
  Total INT DEFAULT 0,
  PRIMARY KEY (GroupId)
);

CREATE TABLE Users (
  UserId INT NOT NULL AUTO_INCREMENT,
  Status VARCHAR(10) DEFAULT "offline", 
  Email VARCHAR(100) NOT NULL,
  Password VARCHAR(100) NOT NULL,
  PRIMARY KEY (UserId)
);

CREATE TABLE FriendList (
  UserId INT,
  FriendId INT,
  PRIMARY KEY (UserId, FriendId),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE,
  FOREIGN KEY (FriendId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE
);

CREATE TABLE Request(
  UserId INT,
  FriendId INT,
  Type VARCHAR(100) NOT NULL,
  PRIMARY KEY (UserId, FriendId),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE,
  FOREIGN KEY (FriendId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE
);

CREATE TABLE User_Group (
  GroupId INT,
  UserId INT,
  PRIMARY KEY (GroupId, UserId),
  FOREIGN KEY (GroupId) REFERENCES Groups(GroupId)
  ON UPDATE CASCADE
  ON DELETE CASCADE,
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE
);

CREATE TABLE Messages (
  MessageId INT NOT NULL AUTO_INCREMENT,
  Content VARCHAR(200),
  UserId INT NOT NULL,
  PRIMARY KEY (MessageId),
  FOREIGN KEY (UserId) REFERENCES Users(UserId)
  ON UPDATE CASCADE
  ON DELETE CASCADE
);
